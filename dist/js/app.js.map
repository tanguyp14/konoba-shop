{"version":3,"sources":["app.js","add/assets/js/view.js","all-categorie-page-licence/assets/js/view.js","mis-en-avant/assets/js/view.js","display-one-categorie/assets/js/view.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["(function ($) {\n    $(window).on('load', function () {\n        AOS.init();\n    });\n    $('document').ready(function () {\n        document.querySelectorAll('.custom-description').forEach(container => {\n            let brs = container.querySelectorAll('br');\n            for (let i = brs.length - 1; i > 0; i--) {\n                if (brs[i].previousSibling && brs[i].previousSibling.nodeName === 'BR') {\n                    brs[i].remove();\n                }\n            }\n        });\n\n        $('.button_menu_mobile').on('click', function () {\n            $(this).toggleClass('open');\n            $('menu-header').toggleClass('open');\n            $('#content').toggleClass('open');\n        });\n\n        function toggleHeaderMenus() {\n            if ($(window).width() < 1324) {\n                $('.site-header-mobile').removeClass('hidden');\n                $('.site-header').addClass('hidden');\n                $('sub-header').removeClass('hidden');\n            } else {\n                $('.site-header-mobile').addClass('hidden');\n                $('.site-header').removeClass('hidden');\n                $('sub-header').addClass('hidden');\n            }\n        }\n\n        // Appel initial\n        toggleHeaderMenus();\n\n        // Mise à jour lors du redimensionnement de la fenêtre\n        $(window).on('resize', function () {\n            toggleHeaderMenus();\n        });\n    });\n\n    $('document').ready(function () {\n        $('.search_icon').on('click', function (e) {\n            e.stopPropagation(); // Empêche la propagation du clic vers le document\n            $('.search_wrapper').toggleClass('active');\n            $('.search_form_wrapper').toggleClass('active');\n\n            if ($('.search_form_wrapper').hasClass('active')) {\n                $('.search_form_wrapper').find('input[type=\"search\"], input[type=\"text\"]').focus();\n            }\n        });\n\n        // Clic sur la recherche elle-même ne ferme pas\n        $('.search_form_wrapper').on('click', function (e) {\n            e.stopPropagation();\n        });\n\n        // Clic n'importe où ailleurs ferme la recherche\n        $(document).on('click', function () {\n            $('.search_form_wrapper').removeClass('active');\n            $('.search_wrapper').removeClass('active');\n        });\n\n        $('.close_icon').on('click', function () {\n            $('.search_form_wrapper').removeClass('active');\n            $('.search_wrapper').removeClass('active');\n        });\n    });\n\n    let lastScrollTop = 0;\n\n    function handleScroll() {\n        const st = $(window).scrollTop();\n        const triggerHeight = 0.2 * $(window).height();\n\n        if ((st < lastScrollTop && st >= triggerHeight) || st === 0) {\n            // Scroll vers le haut ou tout en haut → affiche le header\n            $('header').addClass('stick').css({\n                transform: 'translateY(0)',\n                transition: 'transform 0.3s ease'\n            });\n        } else if (st >= triggerHeight) {\n            // Scroll vers le bas ET on a dépassé 20vh → cache le header\n            $('header').css({\n                transform: 'translateY(-100%)',\n                transition: 'transform 0.3s ease'\n            }).removeClass('stick');\n        } else {\n            // En dessous de 20vh, on laisse le header visible (par exemple au tout début)\n            $('header').css({\n                transform: 'translateY(0)',\n                transition: 'transform 0.3s ease'\n            }).addClass('stick');\n        }\n\n        lastScrollTop = st;\n    }\n\n    $(document).ready(function () {\n        // Position initiale : visible si en haut, sinon caché\n        if ($(window).scrollTop() < 0.2 * $(window).height()) {\n            $('header').css({\n                transform: 'translateY(0)',\n                transition: 'transform 0.3s ease'\n            }).addClass('stick');\n        } else {\n            $('header').css({\n                transform: 'translateY(-100%)',\n                transition: 'transform 0.3s ease'\n            }).removeClass('stick');\n        }\n\n        handleScroll();\n        $(window).on('scroll', handleScroll);\n    });\n\n\n\n\n\n\n    // // Fonction pour mettre à jour la barre en fonction du prix total du panier\n    // function updateShippingBar() {\n    //     // Récupérer le prix total du panier depuis WooCommerce\n    //     var totalPrice = parseFloat($('span.woocommerce-Price-amount.amount').first().text().replace(/[^0-9\\.,]/g, '').replace(',', '.')); // Modifiez le sélecteur en fonction de votre structure HTML\n\n    //     // Sélectionnez la balise où vous voulez afficher la barre\n    //     var shippingBar = document.getElementById(\"shipping-bar\");\n\n    //     // Seuil pour la livraison gratuite\n    //     var freeShippingThreshold = 100;\n\n    //     // Calculez le montant restant pour bénéficier de la livraison gratuite\n    //     var remainingForFreeShipping = freeShippingThreshold - totalPrice;\n\n    //     // Vérifiez si le montant total du panier atteint le seuil de livraison gratuite\n    //     if (totalPrice >= freeShippingThreshold) {\n    //         shippingBar.innerHTML = \"Vous bénéficiez de la livraison gratuite !\";\n    //     } else {\n    //         shippingBar.innerHTML = \"Plus que <span>\" + remainingForFreeShipping.toFixed(1) + \"€</span> avant la livraison gratuite !\";\n    //     }\n    // }\n\n    // // Écoutez l'événement de mise à jour du panier de WooCommerce\n    // $(document).ready(function () {\n    //     // Mise à jour initiale de la barre de livraison\n    //     updateShippingBar();\n\n    //     $(document.body).on('updated_cart_totals', function () {\n    //         // Mise à jour de la barre de livraison après la mise à jour du panier\n    //         setTimeout(function () {\n    //             // Mise à jour de la barre de livraison après la mise à jour du panier\n    //             updateShippingBar();\n    //         }, 500); // 100 millisecondes de délai, ajustez si nécessaire\n    //     });\n\n    //     // Écoutez l'événement de clic sur le bouton \"Ajouter au panier\"\n    //     $(document.body).on('click', '.add_to_cart_button', function () {\n    //         setTimeout(function () {\n    //             // Mise à jour de la barre de livraison après la mise à jour du panier\n    //             updateShippingBar();\n    //         }, 500); // 100 millisecondes de délai, ajustez si nécessaire\n    //     });\n    //     $(document.body).on('click', '.remove_from_cart_button', function () {\n    //         setTimeout(function () {\n    //             // Mise à jour de la barre de livraison après la mise à jour du panier\n    //             updateShippingBar();\n    //         }, 500); // 100 millisecondes de délai, ajustez si nécessaire\n    //     });\n\n\n    // });\n\n    $(document).ready(function () {\n        // Créer une fonction qui ajoute un champ texte avec des boutons + et - dans une div avant chaque \"a .add_to_cart_button\"\n        function addInputBeforeButtons() {\n            $('a.add_to_cart_button').each(function () {\n                // Créer un champ texte\n                var input = $('<input type=\"text\" value=\"1\">');\n                // Créer des boutons + et -\n                var plusBtn = $('<button type=\"button\">+</button>');\n                var minusBtn = $('<button type=\"button\">-</button>');\n                // Créer une div pour les boutons\n                var btnContainer = $('<div class=\"qty_button\"></div>');\n\n                // Ajouter des classes pour le style\n                input.addClass('quantity-input');\n                plusBtn.addClass('plus-btn');\n                minusBtn.addClass('minus-btn');\n\n                // Lier les événements pour les boutons + et -\n                plusBtn.click(function () {\n                    var currentValue = parseInt(input.val());\n                    input.val(currentValue + 1);\n                    updateQuantity(input);\n                });\n                minusBtn.click(function () {\n                    var currentValue = parseInt(input.val());\n                    if (currentValue > 1) {\n                        input.val(currentValue - 1);\n                        updateQuantity(input);\n                    }\n                });\n\n                // Ajouter les boutons à la div\n                btnContainer.append(minusBtn, input, plusBtn);\n\n                // Insérer la div avant le bouton\n                $(this).before(btnContainer);\n\n                // Vérifier si le bouton \"Ajouter au panier\" a la classe \"hide\" et cacher le conteneur de boutons en conséquence\n                if ($(this).hasClass('hide')) {\n                    btnContainer.addClass('hide');\n                }\n            });\n        }\n\n        // Appeler la fonction pour ajouter les champs texte avec boutons\n        addInputBeforeButtons();\n\n        // Fonction pour mettre à jour l'attribut \"data-quantity\" de l'élément <a>\n        function updateQuantity(input) {\n            var quantity = input.val();\n            input.closest('li').find('a.add_to_cart_button').attr('data-quantity', quantity);\n        }\n\n        // Lors du changement de la valeur, modifier le \"data-quantity\" de l'élément <a>\n        $(document).on('change', '.quantity-input', function () {\n            updateQuantity($(this));\n        });\n    });\n\n    // Fonction pour gérer le clic sur le bouton \"Ajouter au panier\" bug mondial relay\n    document.addEventListener('DOMContentLoaded', () => {\n        const orderButton = document.querySelector('.wc-block-components-checkout-place-order-button');\n        const radioButtons = document.querySelectorAll('input[name=\"radio-control-0\"]'); // Tous les boutons radio de livraison\n        const modalLink = document.querySelector('#modaal_link'); // Lien pour choisir le point relais\n        const alertMessage = document.querySelector('#mondial_relay_alert'); // Message d'alerte pour choisir un point relais\n\n        // Fonction pour activer/désactiver le bouton \"Commander\"\n        function toggleOrderButton() {\n            let isPointRelaySelected = false;\n\n            // Vérifier si un point relais a été sélectionné\n            radioButtons.forEach(radio => {\n                if (radio.checked && radio.value.includes('mondialrelay_official_shipping')) {\n                    isPointRelaySelected = true;\n                }\n            });\n\n            if (orderButton) {\n                if (isPointRelaySelected) {\n                    orderButton.removeAttribute('disabled');\n                    orderButton.innerHTML = '<span class=\"wc-block-components-button__text\"><div aria-hidden=\"false\" class=\"wc-block-components-checkout-place-order-button__text\">Commander</div></span>';\n                    if (alertMessage) {\n                        alertMessage.style.display = 'none'; // Masquer l'alerte si un point relais est choisi\n                    }\n                } else {\n                    orderButton.setAttribute('disabled', 'disabled');\n                    orderButton.innerHTML = '<span class=\"wc-block-components-button__text\">Veuillez choisir un point relais</span>';\n                    if (alertMessage) {\n                        alertMessage.style.display = 'block'; // Afficher l'alerte si aucun point relais n'est choisi\n                    }\n                }\n            }\n        }\n\n        // Observer les boutons radio\n        radioButtons.forEach(radio => {\n            radio.addEventListener('change', toggleOrderButton);\n        });\n\n        // Observer le modal pour choisir un point relais\n        if (modalLink) {\n            modalLink.addEventListener('click', () => {\n                toggleOrderButton(); // Vérifier l'état du bouton lors de l'ouverture du modal\n            });\n        }\n\n        // Initialisation au cas où les boutons sont déjà sélectionnés\n        toggleOrderButton();\n    });\n\n\n\n}(jQuery));","(function ($) {\r\n\t$(document).ready(function ($) {\r\n\t});\r\n})(jQuery);","(function ($) {\r\n\t$(document).ready(function ($) {\r\n\t});\r\n})(jQuery);","(function ($) {\r\n\t$(document).ready(function ($) {\r\n\t});\r\n})(jQuery);","(function ($) {\r\n\t$(document).ready(function ($) {\r\n\t});\r\n})(jQuery);"]}